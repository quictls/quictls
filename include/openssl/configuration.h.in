/*
 * {- join("\n * ", @autowarntext) -}
 *
 * Copyright 2016-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */

#ifndef OPENSSL_CONFIGURATION_H
# define OPENSSL_CONFIGURATION_H

# ifdef  __cplusplus
extern "C" {
# endif

# ifdef OPENSSL_ALGORITHM_DEFINES
#  error OPENSSL_ALGORITHM_DEFINES no longer supported
# endif

/*
 * OpenSSL was configured with the following options:
 */
{- if (@{$config{openssl_sys_defines}}) {
      foreach (@{$config{openssl_sys_defines}}) {
        $OUT .= "# ifndef $_\n";
        $OUT .= "#  define $_ 1\n";
        $OUT .= "# endif\n";
      }
    }
    foreach (@{$config{openssl_api_defines}}) {
        (my $macro, my $value) = $_ =~ /^(.*?)=(.*?)$/;
        $OUT .= "# define $macro $value\n";
    }
    if (@{$config{openssl_feature_defines}}) {
      foreach (@{$config{openssl_feature_defines}}) {
        $OUT .= "# ifndef $_\n";
        $OUT .= "#  define $_\n";
        $OUT .= "# endif\n";
      }
    }
    "";
-}

/*
 * Is compression available?
 * */
# if defined(OPENSSL_NO_COMP) \
    || (defined(OPENSSL_NO_BROTLI) && defined(OPENSSL_NO_ZSTD) \
            && defined(OPENSSL_NO_ZLIB))
#  define OPENSSL_NO_COMP_ALG
# else
#  undef  OPENSSL_NO_COMP_ALG
# endif

/*
 * Features completely removed.
 */
# ifndef OPENSSL_NO_EC2M
#  define OPENSSL_NO_EC2M
# endif
# ifndef OPENSSL_NO_EGD
#  define OPENSSL_NO_EGD
# endif
# ifndef OPENSSL_NO_CRYPTO_MDEBUG
#  define OPENSSL_NO_CRYPTO_MDEBUG
# endif
# ifndef OPENSSL_NO_NEGPROTONEG
#  define OPENSSL_NO_NEGPROTONEG
# endif
# ifndef OPENSSL_NO_QUIC
#  define OPENSSL_NO_QUIC
# endif
# ifndef OPENSSL_NO_SRP
#  define OPENSSL_NO_SRP
# endif
# ifndef OPENSSL_NO_TLS1_3
#  define OPENSSL_NO_TLS1_3
# endif
# ifndef OPENSSL_NO_UNIT_TEST
#  define OPENSSL_NO_UNIT_TEST
# endif

/*
 * The following are cipher-specific, but are part of the public API.
 */
# if !defined(OPENSSL_SYS_UEFI)
{- $config{bn_ll} ? "#  define" : "#  undef" -} BN_LLONG
/* Only one for the following should be defined */
{- $config{b64l} ? "#  define" : "#  undef" -} SIXTY_FOUR_BIT_LONG
{- $config{b64}  ? "#  define" : "#  undef" -} SIXTY_FOUR_BIT
{- $config{b32}  ? "#  define" : "#  undef" -} THIRTY_TWO_BIT
# endif

# define RC4_INT {- $config{rc4_int} -}

/*
 * These macros express version number MAJOR.MINOR.PATCH exactly
 */
# define OPENSSL_VERSION_MAJOR  {- $config{major} -}
# define OPENSSL_VERSION_MINOR  {- $config{minor} -}
# define OPENSSL_VERSION_PATCH  {- $config{patch} -}

/*
 * Additional version information which is part of the version naming
 * but not the version number itself. The pre-release string is "-XXX"
 * (like "-alpha1") and the metadata string is "+xxx" (e.g., "+quic").
 */
# define OPENSSL_VERSION_PRE_RELEASE "{- $config{prerelease} -}"
# define OPENSSL_VERSION_BUILD_METADATA "{- $config{build_metadata} -}"

/*
 * Macros to set the version in easily digested string form, both the short
 * "MAJOR.MINOR.PATCH" variant and the longer variant with pre-release
 * and metadata appeded.
 */
# define OPENSSL_VERSION_STR "{- $config{version} -}"
# define OPENSSL_FULL_VERSION_STR "{- $config{full_version} -}"

/*
 * For backward compatibility.
 */
# define OPENSSL_VERSION_TEXT "OpenSSL {- "$config{full_version} $config{release_date}" -}"

/*
 * Synthesize OPENSSL_VERSION_NUMBER with the layout 0xMNN00PP
 */
# ifdef OPENSSL_VERSION_PRE_RELEASE
#  define _OPENSSL_VERSION_PRE_RELEASE 0x0L
# else
#  define _OPENSSL_VERSION_PRE_RELEASE 0xfL
# endif
# define OPENSSL_VERSION_NUMBER          \
    ( (OPENSSL_VERSION_MAJOR<<28)        \
      |(OPENSSL_VERSION_MINOR<<20)       \
      |(OPENSSL_VERSION_PATCH<<4)        \
      |_OPENSSL_VERSION_PRE_RELEASE )

# ifdef  __cplusplus
}
# endif


#endif
